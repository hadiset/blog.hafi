---
import type { ImageMetadata } from "astro";
import "../styles/global.css";

export interface Props {
  pageTitle: string;
  description?: string;
  image?: ImageMetadata | string;
  figmaUrl?: string;
  designer?: string;
}

const {
  pageTitle,
  description = "Hafi's personal blog about my learning journwy.",
  image = "/og-default.jpg",
  figmaUrl,
  designer,
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

function getImageUrl(img: ImageMetadata | string | undefined): string | null {
  if (!img) return null;
  return typeof img === "string" ? img : img.src;
}

const imageUrl = getImageUrl(image);
const fullImageUrl = imageUrl
  ? new URL(imageUrl, Astro.site || Astro.url.origin).href
  : null;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- SEO Meta Tags -->
    <title>{pageTitle} - Slicing Showcase</title>
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <link rel="canonical" href={canonicalURL} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={fullImageUrl} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={pageTitle} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={fullImageUrl} />
  </head>
  <body>
    <slot />

    {
      figmaUrl && (
        <div class="flex flex-col space-y-2 fixed inset-shadow-sm bottom-0 w-full justify-start items-center text-left px-5 py-2 text-sm bg-white text-gray-500 z-50 dark:text-gray-400 md:flex-row md:justify-between">
          <div class="flex flex-col items-center basis-1/2 md:items-start">
            <p>
              Original Design:{" "}
              <a
                href={figmaUrl}
                target="_blank"
                class="text-purple-600 font-bold cursor-pointer"
              >
                Figma
              </a>
            </p>
            {designer && <p>Designer: {designer}</p>}
          </div>
          <div class="flex basis-1/2 justify-end">
            <a
              href="/showcase"
              class="inline-flex w-full items-center shadow-md/50 shadow-purple-800 justify-center py-5 text-base/[1em] font-medium text-white rounded-lg bg-purple-600 hover:bg-purple-800 md:w-[60%] md:py-4 lg:w-[40%]"
            >
              Back to Showcase
              <svg
                class="w-4 h-4 ms-1 rtl:rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 14 10"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M1 5h12m0 0L9 1m4 4L9 9"
                />
              </svg>
            </a>
          </div>
        </div>
      )
    }
  </body>
</html>
